// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int             @unique @default(autoincrement())
  email      String          @unique
  password   String
  firstName  String
  lastName   String
  role       RoleEnum        @default(USER)
  hashRt     String?
  resetCode  String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  healthData UserHealthData?
  userAim    UserAim?
}

model Audit {
  id        Int        @unique @default(autoincrement())
  action    ActionEnum
  text      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model UserHealthData {
  id     Int      @unique @default(autoincrement())
  age    DateTime
  weight Float
  height Float
  User   User     @relation(fields: [userId], references: [id])
  userId Int      @unique
}

model UserAim {
  id     Int                   @unique @default(autoincrement())
  aim    UserAimEnum
  level  UserTrainingLevelEnum
  User   User                  @relation(fields: [userId], references: [id])
  userId Int                   @unique
}

enum UserAimEnum {
  GAIN
  LOSE
  MAINTAIN
  BALANCE
}

enum UserTrainingLevelEnum {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  LIGHT_WEIGHT_BABY
}

enum WorkType {
  WORKOUT
  REST
  CARDIO
  HIIT
  POWERLIFTING
  BODYBUILDING
  YOGA
}

enum RoleEnum {
  ADMIN
  USER
}

enum ActionEnum {
  CREATE
  UPDATE
  DELETE
  ERROR
}
